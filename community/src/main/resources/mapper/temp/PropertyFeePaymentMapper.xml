<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.community.sys.mapper.PropertyFeePaymentMapper">
    
    <resultMap type="PropertyFeePayment" id="PropertyFeePaymentResult">
        <result property="paymentId"    column="payment_id"    />
        <result property="payerName"    column="payer_name"    />
        <result property="paymentAmount"    column="payment_amount"    />
        <result property="paymentTime"    column="payment_time"    />
    </resultMap>

    <sql id="selectPropertyFeePaymentVo">
        select payment_id, payer_name, payment_amount, payment_time from property_fee_payment
    </sql>

    <select id="selectPropertyFeePaymentList" parameterType="PropertyFeePayment" resultMap="PropertyFeePaymentResult">
        <include refid="selectPropertyFeePaymentVo"/>
        <where>  
            <if test="payerName != null  and payerName != ''"> and payer_name like concat('%', #{payerName}, '%')</if>
            <if test="paymentAmount != null "> and payment_amount = #{paymentAmount}</if>
            <if test="paymentTime != null "> and payment_time = #{paymentTime}</if>
        </where>
    </select>
    
    <select id="selectPropertyFeePaymentByPaymentId" parameterType="Long" resultMap="PropertyFeePaymentResult">
        <include refid="selectPropertyFeePaymentVo"/>
        where payment_id = #{paymentId}
    </select>
        
    <insert id="insertPropertyFeePayment" parameterType="PropertyFeePayment" useGeneratedKeys="true" keyProperty="paymentId">
        insert into property_fee_payment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="payerName != null and payerName != ''">payer_name,</if>
            <if test="paymentAmount != null">payment_amount,</if>
            <if test="paymentTime != null">payment_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="payerName != null and payerName != ''">#{payerName},</if>
            <if test="paymentAmount != null">#{paymentAmount},</if>
            <if test="paymentTime != null">#{paymentTime},</if>
         </trim>
    </insert>

    <update id="updatePropertyFeePayment" parameterType="PropertyFeePayment">
        update property_fee_payment
        <trim prefix="SET" suffixOverrides=",">
            <if test="payerName != null and payerName != ''">payer_name = #{payerName},</if>
            <if test="paymentAmount != null">payment_amount = #{paymentAmount},</if>
            <if test="paymentTime != null">payment_time = #{paymentTime},</if>
        </trim>
        where payment_id = #{paymentId}
    </update>

    <delete id="deletePropertyFeePaymentByPaymentId" parameterType="Long">
        delete from property_fee_payment where payment_id = #{paymentId}
    </delete>

    <delete id="deletePropertyFeePaymentByPaymentIds" parameterType="String">
        delete from property_fee_payment where payment_id in 
        <foreach item="paymentId" collection="array" open="(" separator="," close=")">
            #{paymentId}
        </foreach>
    </delete>

</mapper>